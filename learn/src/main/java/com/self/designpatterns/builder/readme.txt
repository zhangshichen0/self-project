生成器模式(builder)

#
java.lang.StringBuilder 使用了生成器模式

什么时候使用？
构建复杂对象，且构造对象时，参数不确定时

是一步一步创建一个复杂对象的创建型模式，允许用户在不知道内部构建的细节的情况下，可以更精细地控制对象的构造流程。
该模式是为了将构建复杂对象的过程和它的部件解耦。使得构建过程和部件的表示隔离开来。


使用builder去创建对应的对象

builder好处：
不提供setter方法，即对象初始化完成后，不可在改变实例的值
当需要不同参数构造实例时，避免需要类中声明多个构造函数
构造对象时，可以灵活控制

所需要的组件：
client  ---- 我
product ---- 房子
builder ---- 民工
Director---- 设计师

形象说明：
简单地说，就好象我要一座房子住，可是我不知道怎么盖（简单的砌墙，层次较低），也不知道怎么样设计（建几个房间，几个门好看，层次较高），
于是我需要找一帮民工，他们会砌墙，还得找个设计师，他知道怎么设计，我还要确保民工听设计师的领导，而设计师本身也不干活，光是下命令，
这里砌一堵墙，这里砌一扇门，这样民工开始建设，最后，我可以向民工要房子了。在这个过程中，设计师是什么也没有，除了他在脑子里的设计和命令，
所以要房子也是跟民工要，记住了！
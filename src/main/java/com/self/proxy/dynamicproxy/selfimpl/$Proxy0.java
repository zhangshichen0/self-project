package com.self.proxy.dynamicproxy.selfimpl;import com.self.proxy.dynamicproxy.People;import java.lang.reflect.Method;public class $Proxy0 implements People {private MyInvocationHandler h;public $Proxy0(MyInvocationHandler h) {this.h = h;}@Overridepublic void sleep () throws Throwable{Method method = com.self.proxy.dynamicproxy.People.class.getMethod("sleep", new Class[]{});this.h.invoke(this, method, new Object[]{});}@Overridepublic void eat () throws Throwable{Method method = com.self.proxy.dynamicproxy.People.class.getMethod("eat", new Class[]{});this.h.invoke(this, method, new Object[]{});}@Overridepublic void daDouDou () throws Throwable{Method method = com.self.proxy.dynamicproxy.People.class.getMethod("daDouDou", new Class[]{});this.h.invoke(this, method, new Object[]{});}}